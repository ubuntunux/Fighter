{'binary_data': b'\x80\x03cnumpy.core.multiarray\n_reconstruct\nq\x00cnumpy\nndarray\nq\x01K\x00\x85q\x02C\x01bq\x03\x87q\x04Rq'
                b'\x05(K\x01M\x1f5\x85q\x06cnumpy\ndtype\nq\x07X\x02\x00\x00\x00u1q\x08K\x00K\x01\x87q\tRq\n(K\x03X'
                b'\x01\x00\x00\x00|q\x0bNNNJ\xff\xff\xff\xffJ\xff\xff\xff\xffK\x00tq\x0cb\x89B\x1f5\x00\x00\n\x00\x00\x00'
                b'\n8\xe7H\x9e\xd0\xc8\xd7\xa0>bb\x106\xac\r\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\t\x00\x00\x00\x01\x00\x00\x00\x01\x00\x00\x00\x01\x00\x00\x00\x01\x00\x00\x00\x01\x00\x00\x00'
                b'\x01\x00\x00\x00\x01\x00\x00\x00\x01\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00`\x00\x00\x00\x80\x18\x00\x00'
                b'\x1f5\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\r\x00\x00\x00\r\x00\x00\x00\r\x00\x00\x00\r\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\r\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xcd\x00\x00\x00\x15\x00\x00\x00'
                b'\x14\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xff\xff\xff\xff'
                b'\x00\x00\x00\x00\xff\xff\xff\xff\x00\x00\x00\x00\xff\xff\xff\xff\x00\x00\x00\x00\xff\xff\xff\xff'
                b'\x00\x00\x00\x00\xff\xff\xff\xff\x00\x00\x00\x00\xff\xff\xff\xff\x00\x00\x00\x00\xff\xff\xff\xff'
                b'\x00\x00\x00\x00\xff\xff\xff\xff\x00\x00\x00\x00\xff\xff\xff\xff\x00\x00\x00\x00\xff\xff\xff\xff'
                b'\x00\x00\x00\x00\xff\xff\xff\xff\x00\x00\x00\x00\xff\xff\xff\xff\x00\x00\x00\x00\xff\xff\xff\xff'
                b'\x00\x00\x00\x00\xff\xff\xff\xff\x00\x00\x00\x00\xff\xff\xff\xff\x00\x00\x00\x00\xff\xff\xff\xff'
                b'\x00\x00\x00\x00\xff\xff\xff\xff\x00\x00\x00\x00\xff\xff\xff\xff\x00\x00\x00\x00\xff\xff\xff\xff'
                b'\x00\x00\x00\x00\xff\xff\xff\xff\x00\x00\x00\x00\xff\xff\xff\xff\x00\x00\x00\x00\xff\xff\xff\xff'
                b'\x00\x00\x00\x00\xff\xff\xff\xff\x00\x00\x00\x00\xff\xff\xff\xff\x00\x00\x00\x00\xff\xff\xff\xff'
                b'\x00\x00\x00\x00\xff\xff\xff\xff\x00\x00\x00\x00\xff\xff\xff\xff\x00\x00\x00\x00\xff\xff\xff\xff'
                b'\x00\x00\x00\x00\xff\xff\xff\xff\x00\x00\x00\x00\xff\xff\xff\xff\x00\x00\x00\x00\xff\xff\xff\xff'
                b'\x00\x00\x00\x00\xff\xff\xff\xff\x00\x00\x00\x00\xff\xff\xff\xff\x00\x00\x00\x00\xff\xff\xff\xff'
                b'\x00\x00\x00\x00\xff\xff\xff\xff\x00\x00\x00\x00\xff\xff\xff\xff\x00\x00\x00\x00\xff\xff\xff\xff'
                b'\x00\x00\x00\x00\xff\xff\xff\xff\x00\x00\x00\x00\xff\xff\xff\xff\x00\x00\x00\x00\xff\xff\xff\xff'
                b'\x00\x00\x00\x00\xff\xff\xff\xff\x00\x00\x00\x00\xff\xff\xff\xff\x00\x00\x00\x00\xff\xff\xff\xff'
                b'\x00\x00\x00\x00\xff\xff\xff\xff\x00\x00\x00\x00\xff\xff\xff\xff\x00\x00\x00\x00\xff\xff\xff\xff'
                b'\x00\x00\x00\x00\xff\xff\xff\xff\x00\x00\x00\x00\xff\xff\xff\xff\x00\x00\x00\x00\xff\xff\xff\xff'
                b'\x00\x00\x00\x00\xff\xff\xff\xff\x00\x00\x00\x00\xff\xff\xff\xff\x00\x00\x00\x00\xff\xff\xff\xff'
                b'\x00\x00\x00\x00\xff\xff\xff\xff\x00\x00\x00\x00\xff\xff\xff\xff\x00\x00\x00\x00\xff\xff\xff\xff'
                b'\x00\x00\x00\x00\xff\xff\xff\xff\x00\x00\x00\x00\xff\xff\xff\xff\x00\x00\x00\x00\xff\xff\xff\xff'
                b'\x00\x00\x00\x00\xff\xff\xff\xff\x00\x00\x00\x00\xff\xff\xff\xff\x00\x00\x00\x00\xff\xff\xff\xff'
                b'\x00\x00\x00\x00\xff\xff\xff\xff\x00\x00\x00\x00\xff\xff\xff\xff\x00\x00\x00\x00\xff\xff\xff\xff'
                b'\x00\x00\x00\x00\xff\xff\xff\xff\x00\x00\x00\x00\xff\xff\xff\xff\x00\x00\x00\x00\xff\xff\xff\xff'
                b'\x00\x00\x00\x00\xff\xff\xff\xff\x00\x00\x00\x00\xff\xff\xff\xff\x00\x00\x00\x00\xff\xff\xff\xff'
                b'\x00\x00\x00\x00\xff\xff\xff\xff\x00\x00\x00\x00\xff\xff\xff\xff\x00\x00\x00\x00\xff\xff\xff\xff'
                b'\x00\x00\x00\x00\xff\xff\xff\xff\x00\x00\x00\x00\xff\xff\xff\xff\x00\x00\x00\x00\xff\xff\xff\xff'
                b'\x00\x00\x00\x00\xff\xff\xff\xff\x00\x00\x00\x00\xff\xff\xff\xff\x00\x00\x00\x00\xff\xff\xff\xff'
                b'\x00\x00\x00\x00\xff\xff\xff\xff\x00\x00\x00\x00\xff\xff\xff\xff\x00\x00\x00\x00\xff\xff\xff\xff'
                b'\x00\x00\x00\x00\xff\xff\xff\xff\x00\x00\x00\x00\xff\xff\xff\xff\x00\x00\x00\x00\xff\xff\xff\xff'
                b'\x00\x00\x00\x00\xff\xff\xff\xff\x00\x00\x00\x00\xff\xff\xff\xff\x00\x00\x00\x00\xff\xff\xff\xff'
                b'\x00\x00\x00\x00\xff\xff\xff\xff\x00\x00\x00\x00\xff\xff\xff\xff\x00\x00\x00\x00\xff\xff\xff\xff'
                b'\x00\x00\x00\x00\xff\xff\xff\xff\x00\x00\x00\x00\xff\xff\xff\xff\x00\x00\x00\x00\xff\xff\xff\xff'
                b'\x00\x00\x00\x00\xff\xff\xff\xff\x00\x00\x00\x00\xff\xff\xff\xff\x00\x00\x00\x00\xff\xff\xff\xff'
                b'\x00\x00\x00\x00\xff\xff\xff\xff\x00\x00\x00\x00\xff\xff\xff\xff\x00\x00\x00\x00\xff\xff\xff\xff'
                b'\x00\x00\x00\x00\xff\xff\xff\xff\x00\x00\x00\x00\xff\xff\xff\xff\x00\x00\x00\x00\xff\xff\xff\xff'
                b'\x00\x00\x00\x00\xff\xff\xff\xff\x00\x00\x00\x00\xff\xff\xff\xff\x00\x00\x00\x00\xff\xff\xff\xff'
                b'\x00\x00\x00\x00\xff\xff\xff\xff\x00\x00\x00\x00\xff\xff\xff\xff\x00\x00\x00\x00\xff\xff\xff\xff'
                b'\x00\x00\x00\x00\xff\xff\xff\xff\x00\x00\x00\x00\xff\xff\xff\xff\x00\x00\x00\x00\xff\xff\xff\xff'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff'
                b'\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff'
                b'\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff'
                b'\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff'
                b'\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff'
                b'\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff'
                b'\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff'
                b'\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff'
                b'\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff'
                b'\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff'
                b'\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff'
                b'\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff'
                b'\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff'
                b'\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff'
                b'\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff'
                b'\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff'
                b'\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff'
                b'\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff'
                b'\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff'
                b'\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff'
                b'\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff'
                b'\xff\xff\xff\xff\xff\xff\xff\xff\x01\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x0f\x00\x00\x00\x0e\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x02\x00\x00\x00\x03\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x003\x00\x00\x00'
                b'\x13\x00\x00\x00\x03\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\n\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x03\x00\x00\x00\x1f5\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00'
                b'\xbfu\x85\x9369\xb6\x8d\xbfu\x85\x9369\xb6\x8d\xef\xe9\xbc\xdf_\x0e\x1c\xbf\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x0f\x00\x00\x00\x0e\x00\x00\x00\x01\x00\x00\x00\x01\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x14\x00\x00\x00\x13\x00\x00\x00'
                b'\x01\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\n\x00\x00\x00\t\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x0f\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00'
                b'\x00\x00\x00\x00\x06\x14\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x01\x00\x00\x00\x01\x00\x00\x00\x06\x14\x00\x00\xff\xff\xff\xff\x00\x00\x00\x00\xff\xff\xff\xff'
                b'\xff\xff\xff\xff\xff\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00'
                b'\xff\x00\x00\x00\xff\xff\xff\xff\xff\xff\xff\xff\x05\x00\x00\x00\x00\x00\x00\x00\xff\xff\xff\xff'
                b'\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff'
                b'\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xb0\xf7\x0e\x99lU\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x08\x00\x00\x00\x10\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00'
                b'\x06\x14\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00'
                b'\x01\x00\x00\x00\x06\x14\x00\x00\xff\xff\xff\xff\x00\x00\x00\x00\xff\xff\xff\xff\xff\xff\xff\xff'
                b'\xff\xff\xff\xff\x01\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\xff\x00\x00\x00'
                b'\xff\xff\xff\xff\xff\xff\xff\xff\x02\x00\x00\x00\x00\x00\x00\x00\xff\xff\xff\xff\xff\xff\xff\xff'
                b'\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff'
                b'\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\xe8\xfb\x0e\x99lU\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x08\x00\x00\x00\x19\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x06\x14\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x01\x00\x00\x00'
                b'\x06\x14\x00\x00\xff\xff\xff\xff\x00\x00\x00\x00\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff'
                b'\x02\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\xff\x00\x00\x00\xff\xff\xff\xff'
                b'\xff\xff\xff\xff\x01\x00\x00\x00\x00\x00\x00\x00\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff'
                b'\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff'
                b'\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00x\xf3\x0e\x99lU\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x0f\x00\x00\x00"\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00V\x8b\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x01\x00\x00\x00V\x8b\x00\x00\xff\xff\xff\xff\x00\x00\x00\x00'
                b'\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x03\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x02\x00\x00\x00\xff\x00\x00\x00\xff\xff\xff\xff\xff\xff\xff\xff\x04\x00\x00\x00\x00\x00\x00\x00'
                b'\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff'
                b'\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x03\x00\x00\x00\x00\x00\x00\x00'
                b'\xa0\xf2\x0e\x99lU\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x15\x00\x00\x002\x00\x00\x00\x01\x00\x00\x00'
                b'\x00\x00\x00\x00V\x8b\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00'
                b'\x01\x00\x00\x00V\x8b\x00\x00\xff\xff\xff\xff\x00\x00\x00\x00\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff'
                b'\x04\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\xff\x00\x00\x00\xff\xff\xff\xff'
                b'\xff\xff\xff\xff\x0b\x00\x00\x00\x00\x00\x00\x00\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff'
                b'\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff'
                b'\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x04\x00\x00\x00\x00\x00\x00\x00\xc0\xfc\x0e\x99lU\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x15\x00\x00\x00H\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00V\x8b\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x01\x00\x00\x00V\x8b\x00\x00\xff\xff\xff\xff\x00\x00\x00\x00'
                b'\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x05\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x02\x00\x00\x00\xff\x00\x00\x00\xff\xff\xff\xff\xff\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff'
                b'\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x05\x00\x00\x00\x00\x00\x00\x00P\xf4\x0e\x99'
                b'lU\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x0e\x00\x00\x00^\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00'
                b'^\x8b\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x02\x00\x00\x00'
                b'\x0f\x14\x00\x00\xff\xff\xff\xff\x00\x00\x00\x00\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff'
                b'\x06\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\xff\x00\x00\x00\xff\xff\xff\xff'
                b'\xff\xff\xff\xff\x06\x00\x00\x00\x00\x00\x00\x00\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff'
                b'\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff'
                b'\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x06\x00\x00\x00\x00\x00\x00\x00\x88\xf8\x0e\x99lU\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x0e\x00\x00\x00m\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00^\x8b\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x02\x00\x00\x00\x0f\x14\x00\x00\xff\xff\xff\xff'
                b'\x00\x00\x00\x00\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x08\x00\x00\x00\x00\x00\x00\x00'
                b'\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x02\x00\x00\x00\xff\x00\x00\x00\xff\xff\xff\xff\xff\xff\xff\xff\x07\x00\x00\x00'
                b'\x00\x00\x00\x00\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff'
                b'\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff'
                b'\xff\xff\xff\xff\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x07\x00\x00\x00'
                b'\x00\x00\x00\x00`\xf9\x0e\x99lU\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x0e\x00\x00\x00|\x00\x00\x00'
                b'\x01\x00\x00\x00\x00\x00\x00\x00^\x8b\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x01\x00\x00\x00\x02\x00\x00\x00\x0f\x14\x00\x00\xff\xff\xff\xff\x00\x00\x00\x00\xff\xff\xff\xff'
                b'\xff\xff\xff\xff\xff\xff\xff\xff\n\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00'
                b'\xff\x00\x00\x00\xff\xff\xff\xff\xff\xff\xff\xff\x08\x00\x00\x00\x00\x00\x00\x00\xff\xff\xff\xff'
                b'\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff'
                b'\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x00\x00\x03\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x08\x00\x00\x00\x00\x00\x00\x008\xfa\x0e\x99lU\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x0e\x00\x00\x00\x8b\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00^\x8b\x00\x00'
                b'\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x02\x00\x00\x00'
                b'\x0f\x14\x00\x00\xff\xff\xff\xff\x00\x00\x00\x00\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff'
                b'\x0c\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\xff\x00\x00\x00\xff\xff\xff\xff'
                b'\xff\xff\xff\xff\t\x00\x00\x00\x00\x00\x00\x00\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff'
                b'\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff'
                b'\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x00\x00\x04\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\t\x00\x00\x00\x00\x00\x00\x00\x10\xfb\x0e\x99lU\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x0e\x00\x00\x00\x9a\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00^\x8b\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x02\x00\x00\x00\x0f\x14\x00\x00\xff\xff\xff\xff'
                b'\x00\x00\x00\x00\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x0e\x00\x00\x00\x00\x00\x00\x00'
                b'\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x02\x00\x00\x00\xff\x00\x00\x00\xff\xff\xff\xff\xff\xff\xff\xff\n\x00\x00\x00'
                b'\x00\x00\x00\x00\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff'
                b'\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff'
                b'\xff\xff\xff\xff\x00\x00\x05\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\n\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\xf6\x0e\x99lU\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x0f\x00\x00\x00\xa9\x00\x00\x00'
                b'\x01\x00\x00\x00\x00\x00\x00\x00^\x8b\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x01\x00\x00\x00\x02\x00\x00\x00\x0f\x14\x00\x00\xff\xff\xff\xff\x00\x00\x00\x00\xff\xff\xff\xff'
                b'\xff\xff\xff\xff\xff\xff\xff\xff\x10\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00'
                b'\xff\x00\x00\x00\xff\xff\xff\xff\xff\xff\xff\xff\x03\x00\x00\x00\x00\x00\x00\x00\xff\xff\xff\xff'
                b'\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff'
                b'\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x0b\x00\x00\x00\x00\x00\x00\x00(\xf5\x0e\x99lU\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x13\x00\x00\x00\xb9\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00^\x8b\x00\x00'
                b'\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x02\x00\x00\x00'
                b'\x0f\x14\x00\x00\xff\xff\xff\xff\x00\x00\x00\x00\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff'
                b'\x12\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\xff\x00\x00\x00\xff\xff\xff\xff'
                b'\xff\xff\xff\xff\x0c\x00\x00\x00\x00\x00\x00\x00\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff'
                b'\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff'
                b'\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x00\x00\x06\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x02\x00\x00\x00\x03\x00\x00\x00\x04\x00\x00\x00'
                b'\x05\x00\x00\x00\x06\x00\x00\x00\x07\x00\x00\x00\x08\x00\x00\x00\t\x00\x00\x00\n\x00\x00\x00\x0b\x00\x00\x00'
                b'\x0c\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x02\x00\x00\x00\x03\x00\x00\x00\x04\x00\x00\x00'
                b'\x05\x00\x00\x00\x06\x00\x00\x00\x07\x00\x00\x00\x08\x00\x00\x00\t\x00\x00\x00\n\x00\x00\x00\x0b\x00\x00\x00'
                b'\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00bloom_intensity\x00contrast\x00exposure\x00is_render_bloo'
                b'm\x00is_render_light_shaft\x00is_render_tonemapping\x00texture_bloom0\x00texture_bloom1\x00texture_bloo'
                b'm2\x00texture_bloom3\x00texture_bloom4\x00texture_diffuse\x00texture_light_shaft\x00\x0e\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00R\x8b\x00\x00\x01\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00vs_in_position\x00\x00\x00\x00\x00'
                b'\x01\x00\x00\x00\x02\x00\x00\x00\x12\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00Q\x8b\x00\x00'
                b'\x01\x00\x00\x00\x03\x00\x00\x00\x00\x00\x00\x00\x03\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00!\x00\x00\x00'
                b'\xff\xff\xff\xff\x00\x00\x00\x00\x13\x00\x00\x00\x13\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00P\x8b\x00\x00'
                b'\x01\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00 \x00\x00\x00'
                b"\xff\xff\xff\xff\x00\x00\x00\x00\x0b\x00\x00\x00'\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00R\x8b\x00\x00"
                b'\x01\x00\x00\x00\x04\x00\x00\x00\x00\x00\x00\x00\x04\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\xff\xff\xff\xff\xff\xff\xff\xffvs_output.position\x00vs_output.tex_coord\x00gl_Positi'
                b'on\x00\t\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00fs_output'
                b'\x00\x0e\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\xff\xff\xff\xffR\x8b\x00'
                b'\x00\x01\x00\x00\x00\x01\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00vs_in_position\x00'
                b'\x13\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\xff\xff\xff\xffP\x8b\x00\x00'
                b'\x01\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00vs_output.tex_coord\x00'
                b'\t\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00R\x8b\x00\x00'
                b'\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00fs_output\x00\x00\x85'
                b'\x01\x00\x00!!NVvp5.0\nOPTION NV_internal;\nOPTION NV_bindless_texture;\nATTRIB vertex_attrib[] = { vertex.a'
                b'ttrib[0..0] };\nOUTPUT result_attrib[] = { result.attrib[0..1] };\nTEMP T;\nMOV.F result.attrib[1].xyz, ver'
                b'tex.attrib[0];\nMAD.F32 result.attrib[0].xy, vertex.attrib[0], {0.5, 0, 0, 0}.x, {0.5, 0, 0, 0}.x;\nMOV.F '
                b'result.position.zw, {-1, 1, 0, 0}.xyxy;\nMOV.F result.position.xy, vertex.attrib[0];\nEND\n\x00\x00\x00\x00'
                b'\x00\x00\x00\x00 \x00\x00\x00\x00\x00\x00\x00\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff'
                b'\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\xff\xff\xff\xff\xff\xff\xff\xff{\t\x00\x00!!NVfp5.0\nOPTION NV_internal;\nOP'
                b'TION NV_gpu_program_fp64;\nOPTION NV_bindless_texture;\nPARAM c[13] = { program.local[0..12] };\nATTRIB fra'
                b'gment_attrib[] = { fragment.attrib[0..0] };\nTEMP R0, R1, R2, R3;\nLONG TEMP D0, D1;\nTEMP T;\nTEMP RC;\nSHOR'
                b'T TEMP HC;\nOUTPUT result_color0 = result.color;\nPK64.U D0.x, c[3];\nSNE.U R0.w, c[4].x, {0, 0, 0, 0}.x;\nM'
                b'OV.U.CC RC.x, -R0.w;\nTEX.F R0.xyz, fragment.attrib[0], handle(D0.x), 2D;\nMOV.F R1.xyz, {0, 0, 0, 0}.x;\nI'
                b'F NE.x;\nPK64.U D0.x, c[8];\nTEX.F R3.xyz, fragment.attrib[0], handle(D0.x), 2D;\nPK64.U D1.x, c[7];\nTEX.F '
                b'R2.xyz, fragment.attrib[0], handle(D1.x), 2D;\nPK64.U D0.x, c[6];\nTEX.F R1.xyz, fragment.attrib[0], handl'
                b'e(D0.x), 2D;\nADD.F32 R1.xyz, R1, R2;\nPK64.U D1.x, c[10];\nADD.F32 R3.xyz, R1, R3;\nPK64.U D0.x, c[9];\nTEX.'
                b'F R1.xyz, fragment.attrib[0], handle(D0.x), 2D;\nTEX.F R2.xyz, fragment.attrib[0], handle(D1.x), 2D;\nADD.'
                b'F32 R1.xyz, R3, R1;\nADD.F32 R1.xyz, R1, R2;\nMUL.F32 R1.xyz, R1, c[5].x;\nENDIF;\nADD.F32 R1.xyz, R0, R1;\nS'
                b'NE.U R0.w, c[11].x, {0, 0, 0, 0}.x;\nMOV.U.CC RC.x, -R0.w;\nMOV.F R0.xyz, {0, 0, 0, 0}.x;\nIF NE.x;\nPK64.U '
                b'D0.x, c[12];\nTEX.F R0.xyz, fragment.attrib[0], handle(D0.x), 2D;\nENDIF;\nSNE.U R0.w, c[0].x, {0, 0, 0, 0}'
                b'.x;\nMOV.U.CC RC.x, -R0.w;\nADD.F32 R1.xyz, R1, R0;\nIF NE.x;\nMUL.F32 R0.xyz, R1, c[1].x;\nMUL.F32 R1.xyz, R'
                b'0, {2, 0, 0, 0}.x;\nMAD.F32 R2.xyz, R1, {0.150000006, 0.5, 0, 0}.x, {0.150000006, 0.5, 0, 0}.y;\nMAD.F32 R'
                b'0.xyz, R1, {0.150000006, 0.0500000007, 0, 0}.x, {0.150000006, 0.0500000007, 0, 0}.y;\nMAD.F32 R2.xyz, R1, R2,'
                b' {0.0600000024, 0, 0, 0}.x;\nMAD.F32 R0.xyz, R1, R0, {0.00400000019, 0, 0, 0}.x;\nRCP.F32 R1.x, R2.x;\nRCP.'
                b'F32 R1.y, R2.y;\nRCP.F32 R1.z, R2.z;\nMAD.F32 R0.xyz, R0, R1, {-0.0666666627, 0, 0, 0}.x;\nMUL.F32 R0.xyz, '
                b'R0, {1.37906432, 0, 0, 0}.x;\nADD.F32 R2.xy, fragment.attrib[0], {-0.5, 0, 0, 0}.x;\nDP2.F32 R0.w, R2, R2;'
                b'\nRSQ.F32 R0.w, R0.w;\nRCP.F32.SAT R0.w, R0.w;\nMAD.F32 R1.x, -R0.w, {2, 3, 0, 0}, {2, 3, 0, 0}.y;\nMUL.F32 '
                b'R0.w, R0, R0;\nMUL.F32 R0.w, R0, R1.x;\nPOW.F32 R0.x, R0.x, {0.454545438, 0, 0, 0}.x;\nPOW.F32 R0.y, R0.y, '
                b'{0.454545438, 0, 0, 0}.x;\nPOW.F32 R0.z, R0.z, {0.454545438, 0, 0, 0}.x;\nMUL.F32 R0.w, R0, R0;\nMAD.F32 R1'
                b'.xyz, -R0.w, R0, R0;\nELSE;\nPOW.F32 R1.x, R1.x, {0.454545438, 0, 0, 0}.x;\nPOW.F32 R1.y, R1.y, {0.45454543'
                b'8, 0, 0, 0}.x;\nPOW.F32 R1.z, R1.z, {0.454545438, 0, 0, 0}.x;\nENDIF;\nADD.F32 R0.xyz, R1, {-0.5, 0, 0, 0}.'
                b'x;\nMAD.F32 result_color0.xyz, R0, c[2].x, {0.5, 0, 0, 0}.x;\nMOV.F result_color0.w, {1, 0, 0, 0}.x;\nE'
                b'ND\n\x10\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x07\x00\x00\x00 '
                b'\x00\x00\x00\xc8\x17\x00\x00\x00\x00\x00\x00\x00\x00\x00\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff'
                b'\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x03\x00\x06\x00\x07\x00\x08\x00\t\x00\n\x00\x0c'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x01\x01\x01\x01\x01\x01\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\xff\xff\xff\xff\xff\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00q\rtq\x0eb.',
 'binary_format': c_uint(36385),
 'include_files': {'../Fighter/Shaders/blending.glsl': '2018-11-25 05:37:02.681401',
                   '../Fighter/Shaders/quad.glsl': '2019-02-22 01:23:25.656632'},
 'macros': OrderedDict(),
 'material_components': [],
 'shader_codes': {GL_FRAGMENT_SHADER: '#version 430 core\n'
                                      '# extension GL_EXT_texture_array : enable\n'
                                      '#define MATERIAL_COMPONENTS 1\n'
                                      '#define FRAGMENT_SHADER 1\n'
                                      '#if __VERSION__ >= 130\n'
                                      '#define texture2D texture\n'
                                      '#define texture2DLod textureLod\n'
                                      '#define texture2DGrad textureGrad\n'
                                      '#define texture2DArray texture\n'
                                      '#define texture2DArrayLod textureLod\n'
                                      '#define texture2DArrayGrad textureGrad\n'
                                      '#define texture3D texture\n'
                                      '#define texture3DLod textureLod\n'
                                      '#define texture3DGrad textureGrad\n'
                                      '#define textureCube texture\n'
                                      '#define textureCubeLod textureLod\n'
                                      '#define textureCubeGrad textureGrad\n'
                                      '#endif\n'
                                      '//------------ INCLUDE -------------//\n'
                                      '// #include "blending.glsl"\n'
                                      '#ifndef UUID_eb176cd4_d78c_31cf_a226_0ce5e0239bb2\n'
                                      '#define UUID_eb176cd4_d78c_31cf_a226_0ce5e0239bb2\n'
                                      '\n'
                                      '\n'
                                      'float Remap(float originalValue, float originalMin, float originalMax, float newMin, '
                                      'float newMax)\n'
                                      '{\n'
                                      '\treturn newMin + (((originalValue - originalMin) / (originalMax - originalMin)) * '
                                      '(newMax - newMin));\n'
                                      '}\n'
                                      '\n'
                                      'float Sharpen(float base, float sharpen)\n'
                                      '{\n'
                                      '    return (base - sharpen) / (1.0 - sharpen);\n'
                                      '}\n'
                                      '\n'
                                      'vec3 Sharpen(vec3 base, vec3 sharpen)\n'
                                      '{\n'
                                      '    return (base - sharpen) / (vec3(1.0) - sharpen);\n'
                                      '}\n'
                                      '\n'
                                      '\n'
                                      'float Contrast(float base, float contrast)\n'
                                      '{\n'
                                      '    return (base - 0.5) * contrast + 0.5;\n'
                                      '}\n'
                                      '\n'
                                      'vec3 Contrast(vec3 base, float contrast)\n'
                                      '{\n'
                                      '    return (base - vec3(0.5)) * contrast + vec3(0.5);\n'
                                      '}\n'
                                      '\n'
                                      '\n'
                                      'float ColorBurn(float base, float blend) {\n'
                                      '\treturn (blend==0.0)?blend:max((1.0-((1.0-base)/blend)),0.0);\n'
                                      '}\n'
                                      '\n'
                                      'vec3 ColorBurn(vec3 base, vec3 blend) {\n'
                                      '\treturn '
                                      'vec3(ColorBurn(base.r,blend.r),ColorBurn(base.g,blend.g),ColorBurn(base.b,blend.b));\n'
                                      '}\n'
                                      '\n'
                                      'vec3 ColorBurn(vec3 base, vec3 blend, float opacity) {\n'
                                      '\treturn (ColorBurn(base, blend) * opacity + base * (1.0 - opacity));\n'
                                      '}\n'
                                      '\n'
                                      '\n'
                                      'float ColorDodge(float base, float blend) {\n'
                                      '\treturn (blend==1.0)?blend:min(base/(1.0-blend),1.0);\n'
                                      '}\n'
                                      '\n'
                                      'vec3 ColorDodge(vec3 base, vec3 blend) {\n'
                                      '\treturn '
                                      'vec3(ColorDodge(base.r,blend.r),ColorDodge(base.g,blend.g),ColorDodge(base.b,blend.b));\n'
                                      '}\n'
                                      '\n'
                                      'vec3 ColorDodge(vec3 base, vec3 blend, float opacity) {\n'
                                      '\treturn (ColorDodge(base, blend) * opacity + base * (1.0 - opacity));\n'
                                      '}\n'
                                      '\n'
                                      '\n'
                                      'float Darken(float base, float blend) {\n'
                                      '\treturn min(blend,base);\n'
                                      '}\n'
                                      '\n'
                                      'vec3 Darken(vec3 base, vec3 blend) {\n'
                                      '\treturn vec3(Darken(base.r,blend.r),Darken(base.g,blend.g),Darken(base.b,blend.b));\n'
                                      '}\n'
                                      '\n'
                                      'vec3 Darken(vec3 base, vec3 blend, float opacity) {\n'
                                      '\treturn (Darken(base, blend) * opacity + base * (1.0 - opacity));\n'
                                      '}\n'
                                      '\n'
                                      '\n'
                                      'vec3 Difference(vec3 base, vec3 blend) {\n'
                                      '\treturn abs(base-blend);\n'
                                      '}\n'
                                      '\n'
                                      'vec3 Difference(vec3 base, vec3 blend, float opacity) {\n'
                                      '\treturn (Difference(base, blend) * opacity + base * (1.0 - opacity));\n'
                                      '}\n'
                                      '\n'
                                      '\n'
                                      'vec3 Exclusion(vec3 base, vec3 blend) {\n'
                                      '\treturn base+blend-2.0*base*blend;\n'
                                      '}\n'
                                      '\n'
                                      'vec3 Exclusion(vec3 base, vec3 blend, float opacity) {\n'
                                      '\treturn (Exclusion(base, blend) * opacity + base * (1.0 - opacity));\n'
                                      '}\n'
                                      '\n'
                                      '\n'
                                      'float Reflect(float base, float blend) {\n'
                                      '\treturn (blend==1.0)?blend:min(base*base/(1.0-blend),1.0);\n'
                                      '}\n'
                                      '\n'
                                      'vec3 Reflect(vec3 base, vec3 blend) {\n'
                                      '\treturn '
                                      'vec3(Reflect(base.r,blend.r),Reflect(base.g,blend.g),Reflect(base.b,blend.b));\n'
                                      '}\n'
                                      '\n'
                                      'vec3 Reflect(vec3 base, vec3 blend, float opacity) {\n'
                                      '\treturn (Reflect(base, blend) * opacity + base * (1.0 - opacity));\n'
                                      '}\n'
                                      '\n'
                                      '\n'
                                      'vec3 Glow(vec3 base, vec3 blend) {\n'
                                      '\treturn Reflect(blend,base);\n'
                                      '}\n'
                                      '\n'
                                      'vec3 Glow(vec3 base, vec3 blend, float opacity) {\n'
                                      '\treturn (Glow(base, blend) * opacity + base * (1.0 - opacity));\n'
                                      '}\n'
                                      '\n'
                                      '\n'
                                      '\n'
                                      'float Overlay(float base, float blend) {\n'
                                      '\treturn base<0.5?(2.0*base*blend):(1.0-2.0*(1.0-base)*(1.0-blend));\n'
                                      '}\n'
                                      '\n'
                                      'vec3 Overlay(vec3 base, vec3 blend) {\n'
                                      '\treturn '
                                      'vec3(Overlay(base.r,blend.r),Overlay(base.g,blend.g),Overlay(base.b,blend.b));\n'
                                      '}\n'
                                      '\n'
                                      'vec3 Overlay(vec3 base, vec3 blend, float opacity) {\n'
                                      '\treturn (Overlay(base, blend) * opacity + base * (1.0 - opacity));\n'
                                      '}\n'
                                      '\n'
                                      '\n'
                                      'float HardLight(float base, float blend) {\n'
                                      '\treturn Overlay(blend, base);\n'
                                      '}\n'
                                      '\n'
                                      'vec3 HardLight(vec3 base, vec3 blend) {\n'
                                      '\treturn Overlay(blend, base);\n'
                                      '}\n'
                                      '\n'
                                      'vec3 HardLight(vec3 base, vec3 blend, float opacity) {\n'
                                      '\treturn (HardLight(base, blend) * opacity + base * (1.0 - opacity));\n'
                                      '}\n'
                                      '\n'
                                      '\n'
                                      'float Lighten(float base, float blend) {\n'
                                      '\treturn max(blend,base);\n'
                                      '}\n'
                                      '\n'
                                      'vec3 Lighten(vec3 base, vec3 blend) {\n'
                                      '\treturn '
                                      'vec3(Lighten(base.r,blend.r),Lighten(base.g,blend.g),Lighten(base.b,blend.b));\n'
                                      '}\n'
                                      '\n'
                                      'vec3 Lighten(vec3 base, vec3 blend, float opacity) {\n'
                                      '\treturn (Lighten(base, blend) * opacity + base * (1.0 - opacity));\n'
                                      '}\n'
                                      '\n'
                                      '\n'
                                      'float LinearBurn(float base, float blend) {\n'
                                      '\treturn max(base+blend-1.0,0.0);\n'
                                      '}\n'
                                      '\n'
                                      'vec3 LinearBurn(vec3 base, vec3 blend) {\n'
                                      '\treturn max(base+blend-vec3(1.0),vec3(0.0));\n'
                                      '}\n'
                                      '\n'
                                      'vec3 LinearBurn(vec3 base, vec3 blend, float opacity) {\n'
                                      '\treturn (LinearBurn(base, blend) * opacity + base * (1.0 - opacity));\n'
                                      '}\n'
                                      '\n'
                                      '\n'
                                      '\n'
                                      'float LinearDodge(float base, float blend) {\n'
                                      '\treturn min(base+blend,1.0);\n'
                                      '}\n'
                                      '\n'
                                      'vec3 LinearDodge(vec3 base, vec3 blend) {\n'
                                      '\treturn min(base+blend,vec3(1.0));\n'
                                      '}\n'
                                      '\n'
                                      'vec3 LinearDodge(vec3 base, vec3 blend, float opacity) {\n'
                                      '\treturn (LinearDodge(base, blend) * opacity + base * (1.0 - opacity));\n'
                                      '}\n'
                                      '\n'
                                      '\n'
                                      '\n'
                                      'float LinearLight(float base, float blend) {\n'
                                      '\treturn blend<0.5?LinearBurn(base,(2.0*blend)):LinearDodge(base,(2.0*(blend-0.5)));\n'
                                      '}\n'
                                      '\n'
                                      'vec3 LinearLight(vec3 base, vec3 blend) {\n'
                                      '\treturn '
                                      'vec3(LinearLight(base.r,blend.r),LinearLight(base.g,blend.g),LinearLight(base.b,blend.b));\n'
                                      '}\n'
                                      '\n'
                                      'vec3 LinearLight(vec3 base, vec3 blend, float opacity) {\n'
                                      '\treturn (LinearLight(base, blend) * opacity + base * (1.0 - opacity));\n'
                                      '}\n'
                                      '\n'
                                      '\n'
                                      'vec3 Multiply(vec3 base, vec3 blend) {\n'
                                      '\treturn base*blend;\n'
                                      '}\n'
                                      '\n'
                                      'vec3 Multiply(vec3 base, vec3 blend, float opacity) {\n'
                                      '\treturn (Multiply(base, blend) * opacity + base * (1.0 - opacity));\n'
                                      '}\n'
                                      '\n'
                                      '\n'
                                      'vec3 Negation(vec3 base, vec3 blend) {\n'
                                      '\treturn vec3(1.0)-abs(vec3(1.0)-base-blend);\n'
                                      '}\n'
                                      '\n'
                                      'vec3 Negation(vec3 base, vec3 blend, float opacity) {\n'
                                      '\treturn (Negation(base, blend) * opacity + base * (1.0 - opacity));\n'
                                      '}\n'
                                      '\n'
                                      '\n'
                                      'vec3 Normal(vec3 base, vec3 blend) {\n'
                                      '\treturn blend;\n'
                                      '}\n'
                                      '\n'
                                      'vec3 Normal(vec3 base, vec3 blend, float opacity) {\n'
                                      '\treturn (Normal(base, blend) * opacity + base * (1.0 - opacity));\n'
                                      '}\n'
                                      '\n'
                                      '\n'
                                      'float PinLight(float base, float blend) {\n'
                                      '\treturn (blend<0.5)?Darken(base,(2.0*blend)):Lighten(base,(2.0*(blend-0.5)));\n'
                                      '}\n'
                                      '\n'
                                      'vec3 PinLight(vec3 base, vec3 blend) {\n'
                                      '\treturn '
                                      'vec3(PinLight(base.r,blend.r),PinLight(base.g,blend.g),PinLight(base.b,blend.b));\n'
                                      '}\n'
                                      '\n'
                                      'vec3 PinLight(vec3 base, vec3 blend, float opacity) {\n'
                                      '\treturn (PinLight(base, blend) * opacity + base * (1.0 - opacity));\n'
                                      '}\n'
                                      '\n'
                                      '\n'
                                      'float Screen(float base, float blend) {\n'
                                      '\treturn 1.0-((1.0-base)*(1.0-blend));\n'
                                      '}\n'
                                      '\n'
                                      'vec3 Screen(vec3 base, vec3 blend) {\n'
                                      '\treturn vec3(Screen(base.r,blend.r),Screen(base.g,blend.g),Screen(base.b,blend.b));\n'
                                      '}\n'
                                      '\n'
                                      'vec3 Screen(vec3 base, vec3 blend, float opacity) {\n'
                                      '\treturn (Screen(base, blend) * opacity + base * (1.0 - opacity));\n'
                                      '}\n'
                                      '\n'
                                      '\n'
                                      '\n'
                                      'float SoftLight(float base, float blend) {\n'
                                      '\treturn '
                                      '(blend<0.5)?(2.0*base*blend+base*base*(1.0-2.0*blend)):(sqrt(base)*(2.0*blend-1.0)+2.0*base*(1.0-blend));\n'
                                      '}\n'
                                      '\n'
                                      'vec3 SoftLight(vec3 base, vec3 blend) {\n'
                                      '\treturn '
                                      'vec3(SoftLight(base.r,blend.r),SoftLight(base.g,blend.g),SoftLight(base.b,blend.b));\n'
                                      '}\n'
                                      '\n'
                                      'vec3 SoftLight(vec3 base, vec3 blend, float opacity) {\n'
                                      '\treturn (SoftLight(base, blend) * opacity + base * (1.0 - opacity));\n'
                                      '}\n'
                                      '\n'
                                      '\n'
                                      'float Subtract(float base, float blend) {\n'
                                      '\treturn max(base+blend-1.0,0.0);\n'
                                      '}\n'
                                      '\n'
                                      'vec3 Subtract(vec3 base, vec3 blend) {\n'
                                      '\treturn max(base+blend-vec3(1.0),vec3(0.0));\n'
                                      '}\n'
                                      '\n'
                                      'vec3 Subtract(vec3 base, vec3 blend, float opacity) {\n'
                                      '\treturn (Subtract(base, blend) * opacity + base * (1.0 - opacity));\n'
                                      '}\n'
                                      '\n'
                                      '\n'
                                      'float VividLight(float base, float blend) {\n'
                                      '\treturn (blend<0.5)?ColorBurn(base,(2.0*blend)):ColorDodge(base,(2.0*(blend-0.5)));\n'
                                      '}\n'
                                      '\n'
                                      'vec3 VividLight(vec3 base, vec3 blend) {\n'
                                      '\treturn '
                                      'vec3(VividLight(base.r,blend.r),VividLight(base.g,blend.g),VividLight(base.b,blend.b));\n'
                                      '}\n'
                                      '\n'
                                      'vec3 VividLight(vec3 base, vec3 blend, float opacity) {\n'
                                      '\treturn (VividLight(base, blend) * opacity + base * (1.0 - opacity));\n'
                                      '}\n'
                                      '\n'
                                      '\n'
                                      '#endif /* UUID_eb176cd4_d78c_31cf_a226_0ce5e0239bb2 */\n'
                                      '//------------ INCLUDE -------------//\n'
                                      '// #include "quad.glsl"\n'
                                      '#ifndef UUID_5165a169_6940_3ab9_af37_7741bddb1b25\n'
                                      '#define UUID_5165a169_6940_3ab9_af37_7741bddb1b25\n'
                                      'struct VERTEX_OUTPUT\n'
                                      '{\n'
                                      '    vec2 tex_coord;\n'
                                      '    vec3 position;\n'
                                      '};\n'
                                      '\n'
                                      '#ifdef VERTEX_SHADER\n'
                                      '#endif \n'
                                      '#endif /* UUID_5165a169_6940_3ab9_af37_7741bddb1b25 */\n'
                                      '\n'
                                      'uniform bool is_render_tonemapping;\n'
                                      'uniform float exposure;\n'
                                      'uniform float contrast;\n'
                                      'uniform sampler2D texture_diffuse;\n'
                                      '\n'
                                      'uniform bool is_render_bloom;\n'
                                      'uniform float bloom_intensity;\n'
                                      'uniform sampler2D texture_bloom0;\n'
                                      'uniform sampler2D texture_bloom1;\n'
                                      'uniform sampler2D texture_bloom2;\n'
                                      'uniform sampler2D texture_bloom3;\n'
                                      'uniform sampler2D texture_bloom4;\n'
                                      '\n'
                                      'uniform bool is_render_light_shaft;\n'
                                      'uniform sampler2D texture_light_shaft;\n'
                                      '\n'
                                      '#ifdef FRAGMENT_SHADER\n'
                                      'layout (location = 0) in VERTEX_OUTPUT vs_output;\n'
                                      'layout (location = 0) out vec4 fs_output;\n'
                                      '\n'
                                      'const float A = 0.15;\n'
                                      'const float B = 0.50;\n'
                                      'const float C = 0.10;\n'
                                      'const float D = 0.20;\n'
                                      'const float E = 0.02;\n'
                                      'const float F = 0.30;\n'
                                      'const float W = 11.2;\n'
                                      'const float ExposureBias = 2.0f;\n'
                                      '\n'
                                      '\n'
                                      'vec3 Uncharted2TonemapFunction(vec3 x)\n'
                                      '{\n'
                                      '     return ((x*(A*x+C*B)+D*E)/(x*(A*x+B)+D*F))-E/F;\n'
                                      '}\n'
                                      '\n'
                                      'vec3 Uncharted2Tonemap(vec3 hdrColor)\n'
                                      '{\n'
                                      '    hdrColor *= exposure;\n'
                                      '    hdrColor = Uncharted2TonemapFunction(hdrColor * ExposureBias);\n'
                                      '    vec3 whiteScale = 1.0f / Uncharted2TonemapFunction(vec3(W));\n'
                                      '    return pow(hdrColor * whiteScale, vec3(1.0 / 2.2));\n'
                                      '}\n'
                                      '\n'
                                      'vec3 ReinhardTonemap(vec3 hdrColor)\n'
                                      '{\n'
                                      '    vec3 mapped = hdrColor / (hdrColor + vec3(1.0));\n'
                                      '    return pow(mapped, vec3(1.0 / 2.2));\n'
                                      '}\n'
                                      '\n'
                                      'vec3 SimpleTonemap(vec3 hdrColor)\n'
                                      '{\n'
                                      '    \n'
                                      '    vec3 mapped = vec3(1.0) - exp(-hdrColor * exposure);\n'
                                      '    return pow(mapped, vec3(1.0 / 2.2));\n'
                                      '}\n'
                                      '\n'
                                      'float vignetting(vec2 uv, float inner_value, float outter_value)\n'
                                      '{\n'
                                      '    float f = smoothstep(0.0, 1.0, length(uv - vec2(0.5)));\n'
                                      '    return mix(inner_value, outter_value, f * f);\n'
                                      '}\n'
                                      '\n'
                                      'void main() {\n'
                                      '    vec2 tex_coord = vs_output.tex_coord.xy;\n'
                                      '    vec3 texColor = texture2D(texture_diffuse, tex_coord).xyz;\n'
                                      '\n'
                                      '    vec3 bloom = vec3(0.0);\n'
                                      '    if(is_render_bloom)\n'
                                      '    {\n'
                                      '        bloom += texture2D(texture_bloom0, tex_coord).xyz;\n'
                                      '        bloom += texture2D(texture_bloom1, tex_coord).xyz;\n'
                                      '        bloom += texture2D(texture_bloom2, tex_coord).xyz;\n'
                                      '        bloom += texture2D(texture_bloom3, tex_coord).xyz;\n'
                                      '        bloom += texture2D(texture_bloom4, tex_coord).xyz;\n'
                                      '        bloom *= bloom_intensity;\n'
                                      '    }\n'
                                      '    texColor += bloom;\n'
                                      '\n'
                                      '    vec3 light_shaft = vec3(0.0);\n'
                                      '    if(is_render_light_shaft)\n'
                                      '    {\n'
                                      '        light_shaft = texture2D(texture_light_shaft, tex_coord).xyz;\n'
                                      '    }\n'
                                      '    texColor += light_shaft;\n'
                                      '\n'
                                      '    if(is_render_tonemapping)\n'
                                      '    {\n'
                                      '        texColor = Uncharted2Tonemap(texColor);\n'
                                      '        texColor *= vignetting(tex_coord, 1.0, 0.0);\n'
                                      '    }\n'
                                      '    else\n'
                                      '    {\n'
                                      '        texColor = pow(texColor, vec3(1.0 / 2.2));\n'
                                      '    }\n'
                                      '\n'
                                      '    fs_output.xyz = Contrast(texColor, contrast);\n'
                                      '    fs_output.a = 1.0;\n'
                                      '}\n'
                                      '#endif ',
                  GL_VERTEX_SHADER: '#version 430 core\n'
                                    '# extension GL_EXT_texture_array : enable\n'
                                    '#define MATERIAL_COMPONENTS 1\n'
                                    '#define VERTEX_SHADER 1\n'
                                    '#if __VERSION__ >= 130\n'
                                    '#define texture2D texture\n'
                                    '#define texture2DLod textureLod\n'
                                    '#define texture2DGrad textureGrad\n'
                                    '#define texture2DArray texture\n'
                                    '#define texture2DArrayLod textureLod\n'
                                    '#define texture2DArrayGrad textureGrad\n'
                                    '#define texture3D texture\n'
                                    '#define texture3DLod textureLod\n'
                                    '#define texture3DGrad textureGrad\n'
                                    '#define textureCube texture\n'
                                    '#define textureCubeLod textureLod\n'
                                    '#define textureCubeGrad textureGrad\n'
                                    '#endif\n'
                                    '//------------ INCLUDE -------------//\n'
                                    '// #include "blending.glsl"\n'
                                    '#ifndef UUID_eb176cd4_d78c_31cf_a226_0ce5e0239bb2\n'
                                    '#define UUID_eb176cd4_d78c_31cf_a226_0ce5e0239bb2\n'
                                    '\n'
                                    '\n'
                                    'float Remap(float originalValue, float originalMin, float originalMax, float newMin, '
                                    'float newMax)\n'
                                    '{\n'
                                    '\treturn newMin + (((originalValue - originalMin) / (originalMax - originalMin)) * '
                                    '(newMax - newMin));\n'
                                    '}\n'
                                    '\n'
                                    'float Sharpen(float base, float sharpen)\n'
                                    '{\n'
                                    '    return (base - sharpen) / (1.0 - sharpen);\n'
                                    '}\n'
                                    '\n'
                                    'vec3 Sharpen(vec3 base, vec3 sharpen)\n'
                                    '{\n'
                                    '    return (base - sharpen) / (vec3(1.0) - sharpen);\n'
                                    '}\n'
                                    '\n'
                                    '\n'
                                    'float Contrast(float base, float contrast)\n'
                                    '{\n'
                                    '    return (base - 0.5) * contrast + 0.5;\n'
                                    '}\n'
                                    '\n'
                                    'vec3 Contrast(vec3 base, float contrast)\n'
                                    '{\n'
                                    '    return (base - vec3(0.5)) * contrast + vec3(0.5);\n'
                                    '}\n'
                                    '\n'
                                    '\n'
                                    'float ColorBurn(float base, float blend) {\n'
                                    '\treturn (blend==0.0)?blend:max((1.0-((1.0-base)/blend)),0.0);\n'
                                    '}\n'
                                    '\n'
                                    'vec3 ColorBurn(vec3 base, vec3 blend) {\n'
                                    '\treturn '
                                    'vec3(ColorBurn(base.r,blend.r),ColorBurn(base.g,blend.g),ColorBurn(base.b,blend.b));\n'
                                    '}\n'
                                    '\n'
                                    'vec3 ColorBurn(vec3 base, vec3 blend, float opacity) {\n'
                                    '\treturn (ColorBurn(base, blend) * opacity + base * (1.0 - opacity));\n'
                                    '}\n'
                                    '\n'
                                    '\n'
                                    'float ColorDodge(float base, float blend) {\n'
                                    '\treturn (blend==1.0)?blend:min(base/(1.0-blend),1.0);\n'
                                    '}\n'
                                    '\n'
                                    'vec3 ColorDodge(vec3 base, vec3 blend) {\n'
                                    '\treturn '
                                    'vec3(ColorDodge(base.r,blend.r),ColorDodge(base.g,blend.g),ColorDodge(base.b,blend.b));\n'
                                    '}\n'
                                    '\n'
                                    'vec3 ColorDodge(vec3 base, vec3 blend, float opacity) {\n'
                                    '\treturn (ColorDodge(base, blend) * opacity + base * (1.0 - opacity));\n'
                                    '}\n'
                                    '\n'
                                    '\n'
                                    'float Darken(float base, float blend) {\n'
                                    '\treturn min(blend,base);\n'
                                    '}\n'
                                    '\n'
                                    'vec3 Darken(vec3 base, vec3 blend) {\n'
                                    '\treturn vec3(Darken(base.r,blend.r),Darken(base.g,blend.g),Darken(base.b,blend.b));\n'
                                    '}\n'
                                    '\n'
                                    'vec3 Darken(vec3 base, vec3 blend, float opacity) {\n'
                                    '\treturn (Darken(base, blend) * opacity + base * (1.0 - opacity));\n'
                                    '}\n'
                                    '\n'
                                    '\n'
                                    'vec3 Difference(vec3 base, vec3 blend) {\n'
                                    '\treturn abs(base-blend);\n'
                                    '}\n'
                                    '\n'
                                    'vec3 Difference(vec3 base, vec3 blend, float opacity) {\n'
                                    '\treturn (Difference(base, blend) * opacity + base * (1.0 - opacity));\n'
                                    '}\n'
                                    '\n'
                                    '\n'
                                    'vec3 Exclusion(vec3 base, vec3 blend) {\n'
                                    '\treturn base+blend-2.0*base*blend;\n'
                                    '}\n'
                                    '\n'
                                    'vec3 Exclusion(vec3 base, vec3 blend, float opacity) {\n'
                                    '\treturn (Exclusion(base, blend) * opacity + base * (1.0 - opacity));\n'
                                    '}\n'
                                    '\n'
                                    '\n'
                                    'float Reflect(float base, float blend) {\n'
                                    '\treturn (blend==1.0)?blend:min(base*base/(1.0-blend),1.0);\n'
                                    '}\n'
                                    '\n'
                                    'vec3 Reflect(vec3 base, vec3 blend) {\n'
                                    '\treturn vec3(Reflect(base.r,blend.r),Reflect(base.g,blend.g),Reflect(base.b,blend.b));\n'
                                    '}\n'
                                    '\n'
                                    'vec3 Reflect(vec3 base, vec3 blend, float opacity) {\n'
                                    '\treturn (Reflect(base, blend) * opacity + base * (1.0 - opacity));\n'
                                    '}\n'
                                    '\n'
                                    '\n'
                                    'vec3 Glow(vec3 base, vec3 blend) {\n'
                                    '\treturn Reflect(blend,base);\n'
                                    '}\n'
                                    '\n'
                                    'vec3 Glow(vec3 base, vec3 blend, float opacity) {\n'
                                    '\treturn (Glow(base, blend) * opacity + base * (1.0 - opacity));\n'
                                    '}\n'
                                    '\n'
                                    '\n'
                                    '\n'
                                    'float Overlay(float base, float blend) {\n'
                                    '\treturn base<0.5?(2.0*base*blend):(1.0-2.0*(1.0-base)*(1.0-blend));\n'
                                    '}\n'
                                    '\n'
                                    'vec3 Overlay(vec3 base, vec3 blend) {\n'
                                    '\treturn vec3(Overlay(base.r,blend.r),Overlay(base.g,blend.g),Overlay(base.b,blend.b));\n'
                                    '}\n'
                                    '\n'
                                    'vec3 Overlay(vec3 base, vec3 blend, float opacity) {\n'
                                    '\treturn (Overlay(base, blend) * opacity + base * (1.0 - opacity));\n'
                                    '}\n'
                                    '\n'
                                    '\n'
                                    'float HardLight(float base, float blend) {\n'
                                    '\treturn Overlay(blend, base);\n'
                                    '}\n'
                                    '\n'
                                    'vec3 HardLight(vec3 base, vec3 blend) {\n'
                                    '\treturn Overlay(blend, base);\n'
                                    '}\n'
                                    '\n'
                                    'vec3 HardLight(vec3 base, vec3 blend, float opacity) {\n'
                                    '\treturn (HardLight(base, blend) * opacity + base * (1.0 - opacity));\n'
                                    '}\n'
                                    '\n'
                                    '\n'
                                    'float Lighten(float base, float blend) {\n'
                                    '\treturn max(blend,base);\n'
                                    '}\n'
                                    '\n'
                                    'vec3 Lighten(vec3 base, vec3 blend) {\n'
                                    '\treturn vec3(Lighten(base.r,blend.r),Lighten(base.g,blend.g),Lighten(base.b,blend.b));\n'
                                    '}\n'
                                    '\n'
                                    'vec3 Lighten(vec3 base, vec3 blend, float opacity) {\n'
                                    '\treturn (Lighten(base, blend) * opacity + base * (1.0 - opacity));\n'
                                    '}\n'
                                    '\n'
                                    '\n'
                                    'float LinearBurn(float base, float blend) {\n'
                                    '\treturn max(base+blend-1.0,0.0);\n'
                                    '}\n'
                                    '\n'
                                    'vec3 LinearBurn(vec3 base, vec3 blend) {\n'
                                    '\treturn max(base+blend-vec3(1.0),vec3(0.0));\n'
                                    '}\n'
                                    '\n'
                                    'vec3 LinearBurn(vec3 base, vec3 blend, float opacity) {\n'
                                    '\treturn (LinearBurn(base, blend) * opacity + base * (1.0 - opacity));\n'
                                    '}\n'
                                    '\n'
                                    '\n'
                                    '\n'
                                    'float LinearDodge(float base, float blend) {\n'
                                    '\treturn min(base+blend,1.0);\n'
                                    '}\n'
                                    '\n'
                                    'vec3 LinearDodge(vec3 base, vec3 blend) {\n'
                                    '\treturn min(base+blend,vec3(1.0));\n'
                                    '}\n'
                                    '\n'
                                    'vec3 LinearDodge(vec3 base, vec3 blend, float opacity) {\n'
                                    '\treturn (LinearDodge(base, blend) * opacity + base * (1.0 - opacity));\n'
                                    '}\n'
                                    '\n'
                                    '\n'
                                    '\n'
                                    'float LinearLight(float base, float blend) {\n'
                                    '\treturn blend<0.5?LinearBurn(base,(2.0*blend)):LinearDodge(base,(2.0*(blend-0.5)));\n'
                                    '}\n'
                                    '\n'
                                    'vec3 LinearLight(vec3 base, vec3 blend) {\n'
                                    '\treturn '
                                    'vec3(LinearLight(base.r,blend.r),LinearLight(base.g,blend.g),LinearLight(base.b,blend.b));\n'
                                    '}\n'
                                    '\n'
                                    'vec3 LinearLight(vec3 base, vec3 blend, float opacity) {\n'
                                    '\treturn (LinearLight(base, blend) * opacity + base * (1.0 - opacity));\n'
                                    '}\n'
                                    '\n'
                                    '\n'
                                    'vec3 Multiply(vec3 base, vec3 blend) {\n'
                                    '\treturn base*blend;\n'
                                    '}\n'
                                    '\n'
                                    'vec3 Multiply(vec3 base, vec3 blend, float opacity) {\n'
                                    '\treturn (Multiply(base, blend) * opacity + base * (1.0 - opacity));\n'
                                    '}\n'
                                    '\n'
                                    '\n'
                                    'vec3 Negation(vec3 base, vec3 blend) {\n'
                                    '\treturn vec3(1.0)-abs(vec3(1.0)-base-blend);\n'
                                    '}\n'
                                    '\n'
                                    'vec3 Negation(vec3 base, vec3 blend, float opacity) {\n'
                                    '\treturn (Negation(base, blend) * opacity + base * (1.0 - opacity));\n'
                                    '}\n'
                                    '\n'
                                    '\n'
                                    'vec3 Normal(vec3 base, vec3 blend) {\n'
                                    '\treturn blend;\n'
                                    '}\n'
                                    '\n'
                                    'vec3 Normal(vec3 base, vec3 blend, float opacity) {\n'
                                    '\treturn (Normal(base, blend) * opacity + base * (1.0 - opacity));\n'
                                    '}\n'
                                    '\n'
                                    '\n'
                                    'float PinLight(float base, float blend) {\n'
                                    '\treturn (blend<0.5)?Darken(base,(2.0*blend)):Lighten(base,(2.0*(blend-0.5)));\n'
                                    '}\n'
                                    '\n'
                                    'vec3 PinLight(vec3 base, vec3 blend) {\n'
                                    '\treturn '
                                    'vec3(PinLight(base.r,blend.r),PinLight(base.g,blend.g),PinLight(base.b,blend.b));\n'
                                    '}\n'
                                    '\n'
                                    'vec3 PinLight(vec3 base, vec3 blend, float opacity) {\n'
                                    '\treturn (PinLight(base, blend) * opacity + base * (1.0 - opacity));\n'
                                    '}\n'
                                    '\n'
                                    '\n'
                                    'float Screen(float base, float blend) {\n'
                                    '\treturn 1.0-((1.0-base)*(1.0-blend));\n'
                                    '}\n'
                                    '\n'
                                    'vec3 Screen(vec3 base, vec3 blend) {\n'
                                    '\treturn vec3(Screen(base.r,blend.r),Screen(base.g,blend.g),Screen(base.b,blend.b));\n'
                                    '}\n'
                                    '\n'
                                    'vec3 Screen(vec3 base, vec3 blend, float opacity) {\n'
                                    '\treturn (Screen(base, blend) * opacity + base * (1.0 - opacity));\n'
                                    '}\n'
                                    '\n'
                                    '\n'
                                    '\n'
                                    'float SoftLight(float base, float blend) {\n'
                                    '\treturn '
                                    '(blend<0.5)?(2.0*base*blend+base*base*(1.0-2.0*blend)):(sqrt(base)*(2.0*blend-1.0)+2.0*base*(1.0-blend));\n'
                                    '}\n'
                                    '\n'
                                    'vec3 SoftLight(vec3 base, vec3 blend) {\n'
                                    '\treturn '
                                    'vec3(SoftLight(base.r,blend.r),SoftLight(base.g,blend.g),SoftLight(base.b,blend.b));\n'
                                    '}\n'
                                    '\n'
                                    'vec3 SoftLight(vec3 base, vec3 blend, float opacity) {\n'
                                    '\treturn (SoftLight(base, blend) * opacity + base * (1.0 - opacity));\n'
                                    '}\n'
                                    '\n'
                                    '\n'
                                    'float Subtract(float base, float blend) {\n'
                                    '\treturn max(base+blend-1.0,0.0);\n'
                                    '}\n'
                                    '\n'
                                    'vec3 Subtract(vec3 base, vec3 blend) {\n'
                                    '\treturn max(base+blend-vec3(1.0),vec3(0.0));\n'
                                    '}\n'
                                    '\n'
                                    'vec3 Subtract(vec3 base, vec3 blend, float opacity) {\n'
                                    '\treturn (Subtract(base, blend) * opacity + base * (1.0 - opacity));\n'
                                    '}\n'
                                    '\n'
                                    '\n'
                                    'float VividLight(float base, float blend) {\n'
                                    '\treturn (blend<0.5)?ColorBurn(base,(2.0*blend)):ColorDodge(base,(2.0*(blend-0.5)));\n'
                                    '}\n'
                                    '\n'
                                    'vec3 VividLight(vec3 base, vec3 blend) {\n'
                                    '\treturn '
                                    'vec3(VividLight(base.r,blend.r),VividLight(base.g,blend.g),VividLight(base.b,blend.b));\n'
                                    '}\n'
                                    '\n'
                                    'vec3 VividLight(vec3 base, vec3 blend, float opacity) {\n'
                                    '\treturn (VividLight(base, blend) * opacity + base * (1.0 - opacity));\n'
                                    '}\n'
                                    '\n'
                                    '\n'
                                    '#endif /* UUID_eb176cd4_d78c_31cf_a226_0ce5e0239bb2 */\n'
                                    '//------------ INCLUDE -------------//\n'
                                    '// #include "quad.glsl"\n'
                                    '#ifndef UUID_5165a169_6940_3ab9_af37_7741bddb1b25\n'
                                    '#define UUID_5165a169_6940_3ab9_af37_7741bddb1b25\n'
                                    'struct VERTEX_OUTPUT\n'
                                    '{\n'
                                    '    vec2 tex_coord;\n'
                                    '    vec3 position;\n'
                                    '};\n'
                                    '\n'
                                    '#ifdef VERTEX_SHADER\n'
                                    'layout (location = 0) in vec4 vs_in_position;\n'
                                    'layout (location = 0) out VERTEX_OUTPUT vs_output;\n'
                                    '\n'
                                    'void main() {\n'
                                    '    vs_output.position = vs_in_position.xyz;\n'
                                    '    vs_output.tex_coord = vs_in_position.xy * 0.5 + 0.5;\n'
                                    '    gl_Position = vs_in_position;\n'
                                    '    gl_Position.z = -1.0;\n'
                                    '    gl_Position.w = 1.0;\n'
                                    '}\n'
                                    '#endif \n'
                                    '#endif /* UUID_5165a169_6940_3ab9_af37_7741bddb1b25 */\n'
                                    '\n'
                                    'uniform bool is_render_tonemapping;\n'
                                    'uniform float exposure;\n'
                                    'uniform float contrast;\n'
                                    'uniform sampler2D texture_diffuse;\n'
                                    '\n'
                                    'uniform bool is_render_bloom;\n'
                                    'uniform float bloom_intensity;\n'
                                    'uniform sampler2D texture_bloom0;\n'
                                    'uniform sampler2D texture_bloom1;\n'
                                    'uniform sampler2D texture_bloom2;\n'
                                    'uniform sampler2D texture_bloom3;\n'
                                    'uniform sampler2D texture_bloom4;\n'
                                    '\n'
                                    'uniform bool is_render_light_shaft;\n'
                                    'uniform sampler2D texture_light_shaft;\n'
                                    '\n'
                                    '#ifdef FRAGMENT_SHADER\n'
                                    '#endif '},
 'shader_name': 'tonemapping',
 'uniforms': [('bool', 'is_render_tonemapping'),
              ('float', 'exposure'),
              ('float', 'contrast'),
              ('sampler2D', 'texture_diffuse'),
              ('bool', 'is_render_bloom'),
              ('float', 'bloom_intensity'),
              ('sampler2D', 'texture_bloom0'),
              ('sampler2D', 'texture_bloom1'),
              ('sampler2D', 'texture_bloom2'),
              ('sampler2D', 'texture_bloom3'),
              ('sampler2D', 'texture_bloom4'),
              ('bool', 'is_render_light_shaft'),
              ('sampler2D', 'texture_light_shaft')]}
